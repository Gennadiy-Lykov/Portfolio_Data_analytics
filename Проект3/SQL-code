-- Даты первых транзакций каждого студента (начиная с этой даты будет собран баланс уроков каждого студента)
with first_payments as
    (
    select user_id,
        date_trunc('day', min(transaction_datetime)) as first_payment_date
    from skyeng_db.payments
    where status_name = 'success'
    group by user_id
    ),
    
-- Даты каждого календарного дня 2016 года
all_dates as
    (
    select distinct(date_trunc('day', class_start_datetime)) as dt
    from skyeng_db.classes
    where class_start_datetime between '2016-01-01' and '2017-01-01'
    ),
    
-- Все даты жизни студента после его первой транзакции
all_dates_by_user as
    (
    select first_payments.user_id,
        all_dates.dt
    from first_payments
    join all_dates
        on first_payments.first_payment_date <= all_dates.dt
        ),
    
-- Все изменения балансов, связанные с успешными транзакциями
payments_by_dates as
    (
    select user_id,
        date_trunc('day', transaction_datetime) as payment_date,
        sum(classes) as transaction_balance_change
    from skyeng_db.payments
    where status_name = 'success'
    group by user_id, payment_date
    ),

-- Баланс студентов, который сформирован только транзакциями
payments_by_dates_cumsum as
    (
    select all_dates_by_user.user_id, all_dates_by_user.dt,
        coalesce (payments_by_dates.transaction_balance_change, 0) as transaction_balance_change,
        sum(coalesce (payments_by_dates.transaction_balance_change, 0)) over (partition by all_dates_by_user.user_id order by all_dates_by_user.dt) as transaction_balance_change_cs
    from all_dates_by_user
    left join payments_by_dates
        on all_dates_by_user.dt = payments_by_dates.payment_date and all_dates_by_user.user_id = payments_by_dates.user_id
        ),

-- Количество уроков за каждый день для каждого ученика
classes_by_dates as
    (
    select user_id,
        date_trunc('day', class_start_datetime) as class_date,
        count(id_class)*-1 as classes
    from skyeng_db.classes
    where class_status in ('success', 'failed_by_student') and class_type != 'trial'
    group by user_id, class_date
    ),

-- Кумулятивная сумма количества пройденных уроков
classes_by_dates_cumsum as
    (
    select all_dates_by_user.user_id,
        all_dates_by_user.dt,
        coalesce (classes,0) as classes,
        sum(coalesce (classes,0)) over (partition by all_dates_by_user.user_id order by all_dates_by_user.dt) as classes_cs
    from all_dates_by_user
    left join classes_by_dates
        on all_dates_by_user.dt = classes_by_dates.class_date and all_dates_by_user.user_id = classes_by_dates.user_id
        ),

-- Балансы уроков каждого студента
balances as
    (
    select payments_by_dates_cumsum.user_id,
        classes_by_dates_cumsum.dt,
        payments_by_dates_cumsum.transaction_balance_change,
        payments_by_dates_cumsum.transaction_balance_change_cs,
        classes_by_dates_cumsum.classes,
        classes_by_dates_cumsum.classes_cs,
        classes_by_dates_cumsum.classes_cs + payments_by_dates_cumsum.transaction_balance_change_cs as balance
    from payments_by_dates_cumsum
    join classes_by_dates_cumsum
        on payments_by_dates_cumsum.dt = classes_by_dates_cumsum.dt and payments_by_dates_cumsum.user_id = classes_by_dates_cumsum.user_id
    order by user_id, dt
    )

-- select *
-- from balances 
-- order by user_id, dt
-- limit 1000

-- В процессе анализа данных выявлен отрицательный баланс до минус 4 занятий у user_id 1984910 и 3335256.
-- Возможно, в таблице payments отсутствует информация по некоторым транзакциям (начислениям количества уроков) user_id 1984910 и 3335256 или же данным пользователям предоставлена отсрочка платежа по урокам.
-- Также выглядит подозрительным списание за один день по 4 урока у user_id 83792358 (26.10.2016), 845851502 (03.05.2016) и по 3 урока у девяти пользователей (в разные даты).

-- Изменение общего количества уроков на балансах студентов
select dt,
    sum(transaction_balance_change) as sum_transaction_balance_change,
    sum(transaction_balance_change_cs) as sum_transaction_balance_change_cs,
    sum(classes) as sum_classes,
    sum(classes_cs) as sum_classes_cs,
    sum(balance) as sum_balance
from balances
group by dt
order by dt
